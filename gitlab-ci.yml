image: docker:latest
services:
  postgres:
    container_name: post-service
    image: postgres:9-alpine
  - docker:dind
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ${PWD}/db_migration/delivery_dump.sql:/home/postgres/delivery_dump.sql
    ports:
      - "5432:5432"
    networks:
      - work_network
    labels:
      container_group: work_env


stages:
    container_name: rabb-service
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
    ports:
      - "15672:15672"
      - "5672:5672"
    depends_on:
  - build
    networks:
  - test
  - package
  - deploy


variables:
        container_name: post-service-test
        image: postgres
    DOCKER_DRIVER: overlay2
    IMAGE_NAME: 431611288834.dkr.ecr.us-east-1.amazonaws.com/continuous_delivery
    IMAGE_TAG: ${CI_COMMIT_REF_NAME}-${CI_PIPELINE_ID}
    AWS_REGION: us-east-1



# Build
        labels:
          container_group: test_env


build-jar:
  stage: build
  image: openjdk:8-jdk
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
  script: "./gradlew assemble"
  artifacts:
    paths:
      - backend/build/libs/*.jar
    expire_in: 2 week
  cache:
    paths:
      - .gradle/wrapper
      - .gradle/caches
      - build/nodejs
        command:
          ./data/build_script.sh


networks:
    work_network:
    test_network: